# --- DOPLŇTE NAVRCHU SOUBORU (pokud tam už není) ---
# import re

# --- ROUTE: mazání přes path /api/jobs/<id> ---
@app.route("/api/jobs/<int:jid>", methods=["DELETE"])
def api_job_delete(jid):
    u, err = require_role(write=True)
    if err:
        return err
    db = get_db()
    ts = db.execute("SELECT COUNT(1) AS c FROM timesheets WHERE job_id=?", (jid,)).fetchone()
    tk = db.execute("SELECT COUNT(1) AS c FROM tasks WHERE job_id=?", (jid,)).fetchone()
    force = str(request.args.get("force")).lower() in ("1","true","yes")
    if (ts and ts["c"]>0) or (tk and tk["c"]>0):
        if force:
            db.execute("DELETE FROM timesheets WHERE job_id=?", (jid,))
            db.execute("DELETE FROM tasks WHERE job_id=?", (jid,))
        else:
            return jsonify({
                "ok": False,
                "error": "has_dependencies",
                "timesheets": ts["c"] if ts else 0,
                "tasks": tk["c"] if tk else 0
            }), 409
    db.execute("DELETE FROM jobs WHERE id=?", (jid,))
    db.commit()
    return jsonify({"ok": True})

# --- ROUTE: proxy /gd/api/jobs (kvůli starým voláním) ---
@app.route("/gd/api/jobs", methods=["DELETE"])
def gd_api_jobs_delete():
    # přesměruje na stejnou logiku jako /api/jobs
    return api_jobs()

# --- UVNITŘ api_jobs(): nahraďte / doplňte blok DELETE za tuto verzi ---
if request.method == "DELETE":
    # id z query nebo JSON; toleruje i "job-7"
    raw_id = request.args.get("id")
    if raw_id is None:
        data = request.get_json(force=True, silent=True) or {}
        raw_id = data.get("id")
    if raw_id is None:
        return jsonify({"ok": False, "error": "missing_id"}), 400

    s = str(raw_id)
    m = re.search(r"(\d+)", s)
    if not m:
        return jsonify({"ok": False, "error": "bad_id"}), 400
    jid = int(m.group(1))

    db = get_db()
    ts = db.execute("SELECT COUNT(1) AS c FROM timesheets WHERE job_id=?", (jid,)).fetchone()
    tk = db.execute("SELECT COUNT(1) AS c FROM tasks WHERE job_id=?", (jid,)).fetchone()

    force = str(request.args.get("force")).lower() in ("1","true","yes")
    if (ts and ts["c"]>0) or (tk and tk["c"]>0):
        if force:
            db.execute("DELETE FROM timesheets WHERE job_id=?", (jid,))
            db.execute("DELETE FROM tasks WHERE job_id=?", (jid,))
        else:
            return jsonify({
                "ok": False,
                "error": "has_dependencies",
                "timesheets": ts["c"] if ts else 0,
                "tasks": tk["c"] if tk else 0
            }), 409

    db.execute("DELETE FROM jobs WHERE id=?", (jid,))
    db.commit()
    return jsonify({"ok": True})